// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry/cli/plugin"
	"github.com/krujos/download_droplet_plugin/command"
)

type FakePluginInitializer struct {
	InitializePluginStub        func(cmd *command.DownloadDropletCmd, cli plugin.CliConnection) error
	initializePluginMutex       sync.RWMutex
	initializePluginArgsForCall []struct {
		cmd *command.DownloadDropletCmd
		cli plugin.CliConnection
	}
	initializePluginReturns struct {
		result1 error
	}
}

func (fake *FakePluginInitializer) InitializePlugin(cmd *command.DownloadDropletCmd, cli plugin.CliConnection) error {
	fake.initializePluginMutex.Lock()
	fake.initializePluginArgsForCall = append(fake.initializePluginArgsForCall, struct {
		cmd *command.DownloadDropletCmd
		cli plugin.CliConnection
	}{cmd, cli})
	fake.initializePluginMutex.Unlock()
	if fake.InitializePluginStub != nil {
		return fake.InitializePluginStub(cmd, cli)
	} else {
		return fake.initializePluginReturns.result1
	}
}

func (fake *FakePluginInitializer) InitializePluginCallCount() int {
	fake.initializePluginMutex.RLock()
	defer fake.initializePluginMutex.RUnlock()
	return len(fake.initializePluginArgsForCall)
}

func (fake *FakePluginInitializer) InitializePluginArgsForCall(i int) (*command.DownloadDropletCmd, plugin.CliConnection) {
	fake.initializePluginMutex.RLock()
	defer fake.initializePluginMutex.RUnlock()
	return fake.initializePluginArgsForCall[i].cmd, fake.initializePluginArgsForCall[i].cli
}

func (fake *FakePluginInitializer) InitializePluginReturns(result1 error) {
	fake.InitializePluginStub = nil
	fake.initializePluginReturns = struct {
		result1 error
	}{result1}
}

var _ command.PluginInitializer = new(FakePluginInitializer)
